#!/usr/bin/env bash

function docker_restore() {
    path_dump=$1
    encoding=$2
    path_log="${path_dump}.restore.log"
    nome_container="pgsql_$(date +'%s')"
    docker run --name $nome_container \
        -e POSTGRES_PASSWORD=pass \
        -e POSTGRES_INITDB_ARGS="--encoding=${encoding}" \
        -d postgres && \
        docker cp $path_dump $nome_container:/dump_file && \
        echo "Restaurando..." && \
        sleep 7 && \
        docker exec -i -u postgres $nome_container \
            pg_restore --dbname=postgres --verbose /dump_file &>> "${path_log}";
    docker stop $nome_container && docker rm $nome_container;
    echo -e "\nERROS:\n";
    cat "${path_log}" | grep "error";
    echo -e "\nLog do restore salvo em: $path_log \n";
}

clear;

# Carrega as variaveis do .env
source "$(dirname "$0")/.env";

echo "========================================";
echo "HOST: $HOST";
echo "PORT: $PORT";
echo "USUÁRIO: $USER";
# echo "SENHA: $PASSWORD";
echo "BANCO: $DATABASE";
echo "ESQUEMA: $SCHEMA";
echo "ENCODING: $ENCODING";
echo "========================================";

now=$(date +'%Y-%m-%d_%s');
path="${HOME}/${DATABASE}_${SCHEMA}_backups";
nome_arq="${DATABASE}_${SCHEMA}_${now}";

if [ ! -d $path ]
then
    mkdir -p "$path";
fi

PGPASSWORD=$PASSWORD pg_dump \
    -h $HOST \
    -U $USER \
    -n $SCHEMA \
    --format=c \
    --encoding=$ENCODING \
    --no-tablespaces \
    --verbose \
    $DATABASE > "${path}/${nome_arq}";

# Compacta o dump em zip, caso o format seja plain
# zip "${path}/${nome_arq}.zip" "${path}/${nome_arq}";

# Remove o dump caso e deixa somente o .zip
# rm -f "${path}/${nome_arq}"

echo -e "\nDump finalizado! Local: ${path}/${nome_arq}\n"

while true; do
    read -p "Restaurar dump com Docker para checar integridade? (y/N) " yn
    case $yn in
        [Yy]* ) docker_restore "${path}/${nome_arq}" "$ENCODING"; break;;
        [Nn]* ) exit;;
        * ) exit;;
    esac
done
